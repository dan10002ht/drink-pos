version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: food_pos_postgres_dev
    environment:
      POSTGRES_DB: food_pos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - food_pos_network_dev
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: food_pos_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - food_pos_network_dev
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: food_pos_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@foodpos.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - food_pos_network_dev
    depends_on:
      - postgres
    restart: unless-stopped

  # Backend API (development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: food_pos_backend_dev
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=food_pos
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
    networks:
      - food_pos_network_dev
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  pgadmin_data_dev:
    driver: local

networks:
  food_pos_network_dev:
    driver: bridge
